services:
  frontend:
    build: 
      context: .
      dockerfile: packages/questionnaire-fe/Dockerfile
    ports:
      - "8877:80"  # 将主机的 8877 端口映射到容器的 80 端口
    depends_on:
      - backend
    environment:
      - TZ=Asia/Shanghai  # 设置时区为上海

  backend:
    build: 
      context: .
      dockerfile: packages/questionnaire-be/Dockerfile
    ports:
      - "8879:8879"  # 将主机的 8879 端口映射到容器的 8879 端口
    depends_on:
      - redis
      - mysql
      - mongo
    environment:
      # 你可以在这里添加后端需要的环境变量
      - NODE_ENV=docker
      - MONGO_HOST=mongo
      - MYSQL_HOST=mysql
      - REDIS_HOST=redis
      - TZ=Asia/Shanghai  # 设置时区为上海
    # 如果有数据库或其他外部服务，可以在这里指定它们
    volumes:
      - backend_logs:/app/logs


  client:
    build: 
      context: .
      dockerfile: packages/questionnaire-client/Dockerfile
    ports:
      - "8878:8878"  # 将主机的 8879 端口映射到容器的 8879 端口
    depends_on:
      - mysql
      - mongo
    environment:
      # 你可以在这里添加后端需要的环境变量
      - NODE_ENV=production
      - NEXT_PUBLIC_INTERNAL_API_SECRET=indulgeback
      - MONGO_HOST=mongo
      - MYSQL_HOST=mysql
      - TZ=Asia/Shanghai  # 设置时区为上海
    # 如果有数据库或其他外部服务，可以在这里指定它们
    volumes:
      - client_logs:/app/logs

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  mysql:
    image: mysql:8.0
    ports:
      - "3307:3307"
    command: --port=3307
    environment:
      - MYSQL_ROOT_PASSWORD=12345678
      - MYSQL_DATABASE=questionnaire_db
      - TZ=Asia/Shanghai  # 设置时区为上海
    volumes:
      - mysql_data:/var/lib/mysql

  mongo:
    image: mongo:6.0
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=12345678
      - TZ=Asia/Shanghai  # 设置时区为上海
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db 
    command: mongod --auth  # 启用身份验证
    privileged: true  # 提升权限

volumes:
  mysql_data:
  mongodb_data:
  backend_logs:
  client_logs: