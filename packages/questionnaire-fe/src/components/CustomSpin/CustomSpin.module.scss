$ballSize: 15px; // 小球尺寸
$containerSize: 225px; // 容器尺寸
$n: 36; // 小球数量
$pdeg: calc(360deg / $n); // 旋转角度
$ani-duration: 2000ms; // 动画持续时间
$white-color: #cdfaf6; // 白色
$primary-color: #26A69A; // 主题色

.loading {
    width: $containerSize;
    height: $containerSize;
    margin: 100px auto;
    position: relative;
    border-radius: 50%;

    .dot {
        position: absolute;
        left: 50%;
        top: 50%;
        width: $ballSize;
        height: $ballSize;
        margin-left: calc(-#{calc($ballSize / 2)});
        margin-top: calc(-#{calc($ballSize / 2)});
        perspective: 70px;
        transform-style: preserve-3d;

        &::before,
        &::after {
            content: '';
            position: absolute;
            width: 100%;
            height: 100%;
            border-radius: 50%;
        }

        &::before {
            background: $primary-color;
            top: -100%;
            animation: moveBlack $ani-duration infinite;
        }

        &::after {
            background: $white-color;
            top: 100%;
            animation: moveWhite $ani-duration infinite;
        }
    }
}

@keyframes moveWhite {
    0% {
        animation-timing-function: ease-in;
    }

    25% {
        transform: translate3d(0, -100%, -$ballSize);
        animation-timing-function: ease-out;
    }

    50% {
        transform: translate3d(0, -200%, 0);
        animation-timing-function: ease-in;
    }

    75% {
        transform: translate3d(0, -100%, $ballSize);
        animation-timing-function: ease-out;
    }
}

@keyframes moveBlack {
    0% {
        animation-timing-function: ease-in;
    }

    25% {
        transform: translate3d(0, 100%, $ballSize);
        animation-timing-function: ease-out;
    }

    50% {
        transform: translate3d(0, 200%, 0);
        animation-timing-function: ease-in;
    }

    75% {
        transform: translate3d(0, 100%, -$ballSize);
        animation-timing-function: ease-out;
    }
}

@for $i from 1 through $n {
    .dot:nth-child(#{$i}) {
        transform: rotate(calc(#{$pdeg} * $i)) translateY(calc(-#{$containerSize} / 2));

        &::before,
        &::after {
            animation-delay: calc(-#{calc($ani-duration * 6 / $n * $i)});
        }
    }
}